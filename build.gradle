buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'https://repo.spring.io/plugins-snapshot' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.5.BUILD-SNAPSHOT")
        classpath("org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:${testSetsPluginVersion}")
        classpath("com.toomuchcoding:uptodate-gradle-plugin:1.0.1")
        classpath("org.springframework.build.gradle:propdeps-plugin:+")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gitPropertiesPluginVersion}")
        classpath ("org.junit.platform:junit-platform-gradle-plugin:1.0.1")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'com.toomuchcoding.uptodate'
apply plugin: 'propdeps'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'org.junit.platform.gradle.plugin'


jar {
    baseName = project.group + "." + project.name
    version = version


    manifest {
        attributes 'Implementation-Title': title,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

springBoot {
    buildInfo()
}

compileJava.dependsOn(processResources)

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springPlatformVersion}"

    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    optional("org.springframework.boot:spring-boot-configuration-processor")
    optional("org.springframework.boot:spring-boot-devtools")
    testCompile("org.codehaus.groovy:groovy-all")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile("org.junit.jupiter:junit-jupiter-engine")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("io.projectreactor:reactor-test")

}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}
